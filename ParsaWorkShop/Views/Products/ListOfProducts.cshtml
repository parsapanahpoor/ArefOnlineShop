@model Domain.ViewModels.SiteSide.Product.ListOfProductsViewModel
@using Application.Convertors;
@using Domain.ViewModels.SiteSide.Product
@using Application.StaticTools

@{
    ViewData["Title"] = "لیست محصولات";

    var categories = ViewData["Categories"] as List<ListOfCategoriesForShowInListOfProducts>;
    var colors = ViewData["Colors"] as List<ListOfColorsForShowInListOfProducts>;
    var sizes = ViewData["Sizes"] as List<ListOfSizesForShowInListOfProducts>;

    var minPrice = ViewData["MinPrice"] as int?;
    var maxPrice = ViewData["MaxPrice"] as int?;

    List<int> favoriteProducts = ViewData["FavoriteProducts"] as List<int>;
}

@section Styles
    {

    <!-- Main CSS File -->
    <link href="/ArefSet/dist/output.css" rel="stylesheet" />
    <link rel="stylesheet" href="/ArefSet/src/assets/styles/style.css" />
    <link rel="stylesheet" href="/ArefSet/src/assets/styles/productList.css" />
}

@section Scripts
    {

    <script src="/ArefSet/src/JS/landing.js"></script>

    <script>
        var colorButton = document.getElementsByClassName("theme-button");
        var i;
        for (i = 0; i < colorButton.length; i++) {
            colorButton[i].addEventListener("click", function () {
                this.classList.toggle("active");
            });
        }

        //  price filter

        var lowerSlider = document.querySelector("#lower");
        var upperSlider = document.querySelector("#upper");

        document.querySelector("#two").value = upperSlider.value;
        document.querySelector("#one").value = lowerSlider.value;

        var lowerVal = parseInt(lowerSlider.value);
        var upperVal = parseInt(upperSlider.value);

        upperSlider.oninput = function () {
            lowerVal = parseInt(lowerSlider.value);
            upperVal = parseInt(upperSlider.value);

            if (upperVal < lowerVal + 4) {
                lowerSlider.value = upperVal - 4;
                if (lowerVal == lowerSlider.min) {
                    upperSlider.value = 4;
                }
            }
            document.querySelector("#two").value = this.value;
        };

        lowerSlider.oninput = function () {
            lowerVal = parseInt(lowerSlider.value);
            upperVal = parseInt(upperSlider.value);
            if (lowerVal > upperVal - 4) {
                upperSlider.value = lowerVal + 4;
                if (upperVal == upperSlider.max) {
                    lowerSlider.value = parseInt(upperSlider.max) - 4;
                }
            }
            document.querySelector("#one").value = this.value;
        };
    </script>
    <script>
        //const modal = document.querySelector(".modal");
        //const showModal = document.querySelector(".showModal");
        //const hideModal = document.querySelectorAll(".hideModal");

        //const menu = document.querySelector(".menu");
        //const showMenu = document.querySelector(".showMenu");
        //const hideMenu = document.querySelectorAll(".hideMenu");

        const filterMenu = document.querySelector(".filterMenu");
        const mainContent = document.querySelector(".mainContent");
        const showFilterMenu = document.querySelector(".showFilterMenu");
        const hideFilterMenu = document.querySelector(".hideFilterMenu");
        const footer = document.querySelector(".footer");
        const navbar = document.querySelector(".navbar");
        const breadcrumb = document.querySelector(".breadcrumb");

        //const body = document.querySelector("body");

        // ------------------------ modal -------------------------------

        //showModal.addEventListener("click", function () {
        //    modal.classList.remove("hidden");
        //    body.style.overflow = "hidden";
        //});

        //hideModal.forEach((close) => {
        //    close.addEventListener("click", function () {
        //        modal.classList.add("hidden");
        //        body.style.overflow = "auto";
        //    });
        //});

        // ------------------------Side Menu Responsive-------------------------------

        //showMenu.addEventListener("click", function () {
        //    // menu.classList.replace("-right-[70%]","right-0")
        //    menu.classList.remove("opacity-0");
        //    menu.classList.remove("invisible");
        //    body.style.overflow = "hidden";
        //});
        //hideMenu.forEach((close) => {
        //    close.addEventListener("click", function () {
        //        // menu.classList.replace("right-0","-right-[70%]")
        //        menu.classList.add("opacity-0");
        //        menu.classList.add("invisible");
        //        body.style.overflow = "auto";
        //    });
        //});

        //function openForm(evt, formName) {
        //    var i, tabFormContent, tabFormLinks;
        //    tabFormContent = document.getElementsByClassName("tabFormContent");
        //    for (i = 0; i < tabFormContent.length; i++) {
        //        tabFormContent[i].style.display = "none";
        //    }
        //    tabFormLinks = document.getElementsByClassName("tabFormLinks");
        //    for (i = 0; i < tabFormLinks.length; i++) {
        //        tabFormLinks[i].className = tabFormLinks[i].className.replace(
        //            " activeFormItem",
        //            ""
        //        );
        //    }
        //    document.getElementById(formName).style.display = "block";
        //    evt.currentTarget.className += " activeFormItem";
        //}

        //// Get the element with id="defaultOpen" and click on it
        //document.getElementById("defaultFormOpen").click();

        // ------------------------Filter Side Menu Responsive-------------------------------

        showFilterMenu.addEventListener("click", function () {
            // menu.classList.replace("-right-[70%]","right-0")
            // menu.classList.remove("opacity-0");
            // menu.classList.remove("invisible");

            mainContent.classList.add("hidden");
            filterMenu.classList.remove("hidden");
            footer.classList.add("hidden");
            navbar.classList.add("hidden");
            breadcrumb.classList.add("hidden");

            // showFilterMenu
            // hideFilterMenu

            // body.style.overflow = "hidden";
            console.log("showFilterMenu")
        });

        // function hideFilterMenu() {
        //   alert("hided")
        // }

        hideFilterMenu.addEventListener("click", function () {

            console.log("hello");

            filterMenu.classList.add("hidden");
            // alert("hided")
            mainContent.classList.remove("hidden");
            footer.classList.remove("hidden");
            navbar.classList.remove("hidden");
            breadcrumb.classList.remove("hidden");
            // menu.classList.replace("right-0","-right-[70%]")
            // menu.classList.add("opacity-0");
            // menu.classList.add("invisible");
            // body.style.overflow = "auto";
        });

        // -----------------------------Like btn------------------------------

        var likeBtn = document.getElementsByClassName("likeBtn");
        var i;
        for (i = 0; i < likeBtn.length; i++) {
            likeBtn[i].addEventListener("click", function () {
                this.classList.toggle("text-red-500");
            });
        }

        //function myFunction(e) {
        //    document.getElementById("Status").value = e.target.value;
        //    $("#filtre").submit();
        //}

        //$("#StatusOption").on('change', function () {

        //    console.log(this.value);

        //    document.getElementById("Status").value = this.value;
        //    $("#filtre").submit();
        //});



    </script>

    <script type="text/javascript">
        function changeDropDown(dropdown) {
            var location = dropdown.options[dropdown.selectedIndex].value;

            document.getElementById("Status").value = location;
            $("#filtre").submit();
        }
    </script>
}



<main class="mx-auto mb-12">
    <section class="breadcrumb mx-auto lg:mt-5 mt-5 px-5 lg:px-0 max-w-[99%] lg:max-w-[86.5em]">
        <nav class="flex" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-3">
                <li class="inline-flex items-center">
                    <a href="/" class="inline-flex items-center text-sm font-medium text-[#A8A8A8] hover:text-[#252525] dark:text-gray-400 dark:hover:text-white">
                        <svg aria-hidden="true" class="w-4 h-4 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
                        </svg>
                        خانه
                    </a>
                </li>

                <li aria-current="page">
                    <div class="flex items-center">
                        <svg aria-hidden="true" class="w-6 h-6 text-gray-400 transform rotate-180" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                        </svg>
                        <span class="mr-1 text-sm font-medium text-text-[#252525] md:mr-2 dark:text-gray-400">لیست نحصولات</span>
                    </div>
                </li>
            </ol>
        </nav>
    </section>
    <section class="mx-auto px-5 lg:px-0 max-w-[99%] lg:max-w-[86.5em] flex items-start justify-center gap-8">
        <div class="filterMenu lg:inline-block w-full lg:w-[25%] hidden">
            <div class="mx-auto flex items-center justify-between py-8 mt-5 border-b-[1px] border-[#D0D0D099]">
                <p class="text-[#252525] text-[16px] font-semibold">فیلترها :</p>
                <div class="flex items-center gap-2">
                    <img src="/ArefSet/src/assets/images/landing/RemoveIcon.png" alt="">
                    <a asp-action="ListOfProducts" asp-area="" asp-controller="products" class="text-[#7E8285] lg:text-[#C5272D] text-[12px] font-normal">
                        پاک کردن همه
                    </a>
                    <a href="#" onclick="hideFilterMenu()" class="hideFilterMenu mr-3 inline-flex items-center justify-center w-[48px] h-[48px] rounded-full bg-[#EDEDED] lg:hidden">
                        <img class="w-3 h-3" src="/ArefSet/src/assets/images/landing/RemoveIcon.png" alt="">
                    </a>
                </div>
            </div>
            <form asp-action="ListOfProducts" asp-controller="Products" asp-area="" id="filtre" method="get">
                <input type="hidden" asp-for="Page" />
                <input type="hidden" asp-for="Status" />
                <input type="hidden" asp-for="ProductTitle" />

                <div class="mx-auto bg-white min-h-sceen w-full relative">
                    <!-- <div class="flex flex-col items-center  w-full">
                      <h2 class="font-bold text-5xl mt-5 tracking-tight">FAQ</h2>
                      <p class="text-neutral-500 text-xl mt-3">
                        Frequenty asked questions
                      </p>
                    </div> -->
                    <div class="grid divide-y divide-neutral-200 text-right w-full mx-auto mt-5">

                        @if (categories != null && categories.Any())
                        {
                            <div class="py-5 w-full">
                                <details class="group">
                                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                                        <span> دسته بندی</span>
                                        <span class="transition group-open:rotate-180">
                                            <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24">
                                                <path d="M6 9l6 6 6-6"></path>
                                            </svg>
                                        </span>
                                    </summary>

                                    @foreach (var category in categories)
                                    {
                                        <div class="flex items-center justify-start mb-2">
                                            <div class="flex items-center mt-4">

                                                @if (Model.CategoriesId != null && Model.CategoriesId.Any() && Model.CategoriesId.Contains(category.CategoryId))
                                                {
                                                    <input id="default-checkbox" type="checkbox" checked="checked" name="CategoriesId" value="@category.CategoryId" class="w-4 h-4 accent-[#252525] text-[#252525] bg-gray-100 border-gray-300 rounded focus:ring-[#252525] dark:focus:ring-[#252525] dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                                }
                                                else
                                                {
                                                    <input id="default-checkbox" type="checkbox" name="CategoriesId" value="@category.CategoryId" class="w-4 h-4 accent-[#252525] text-[#252525] bg-gray-100 border-gray-300 rounded focus:ring-[#252525] dark:focus:ring-[#252525] dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                                }

                                                <label for="default-checkbox" class="ml-2 text-sm font-medium text-[#9B9B9B] dark:text-gray-300 mr-2 text-[20px]">
                                                    @category.CategoryTitle
                                                </label>

                                            </div>
                                        </div>
                                    }

                                </details>
                            </div>

                        }

                        @if (sizes != null && sizes.Any())
                        {
                            <div class="py-5">
                                <details class="group">
                                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                                        <span> سایز</span>
                                        <span class="transition group-open:rotate-180">
                                            <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24">
                                                <path d="M6 9l6 6 6-6"></path>
                                            </svg>
                                        </span>
                                    </summary>

                                    @foreach (var size in sizes)
                                    {
                                        <div class="flex items-center justify-start mb-2">
                                            <div class="flex items-center mt-4">

                                                @if (Model.SizesId != null && Model.SizesId.Any() && Model.SizesId.Contains(size.SizesId))
                                                {
                                                    <input id="default-checkbox" type="checkbox" checked="checked" name="SizesId" value="@size.SizesId" class="w-4 h-4 accent-[#252525] text-[#252525] bg-gray-100 border-gray-300 rounded focus:ring-[#252525] dark:focus:ring-[#252525] dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                                }
                                                else
                                                {
                                                    <input id="default-checkbox" type="checkbox" name="SizesId" value="@size.SizesId" class="w-4 h-4 accent-[#252525] text-[#252525] bg-gray-100 border-gray-300 rounded focus:ring-[#252525] dark:focus:ring-[#252525] dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                                }

                                                <label for="default-checkbox" class="ml-2 text-sm font-medium text-[#9B9B9B] dark:text-gray-300 mr-2 text-[20px]">
                                                    @size.SizesTitle
                                                </label>

                                            </div>
                                        </div>
                                    }

                                </details>
                            </div>

                        }

                        @if (colors != null && colors.Any())
                        {
                            <div class="py-5">
                                <details class="group">
                                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                                        <span> رنگ</span>
                                        <span class="transition group-open:rotate-180">
                                            <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24">
                                                <path d="M6 9l6 6 6-6"></path>
                                            </svg>
                                        </span>
                                    </summary>
                                    <div class="flex items-center justify-center gap-2"></div>
                                    <div class="switcher flex items-center justify-center gap-2">

                                        @foreach (var color in colors)
                                        {

                                            if (Model.ColorsId != null && Model.ColorsId.Any() && Model.ColorsId.Contains(color.ColorId))
                                            {
                                                <input type="checkbox" name="ColorsId" class="hidden" id="indigo@(color.ColorId)" value="@color.ColorId">
                                                <label data-theme="@color.ColorTitle" class="theme-button focus:outline-0 w-[20px] h-[20px] rounded-full bg-@color.ColorTitle-500

                                                   @((Model.ColorsId != null && Model.ColorsId.Any() && Model.ColorsId.Contains(color.ColorId)) ? "active" : " " )" for="indigo@(color.ColorId)">
                                                </label>
                                            }
                                            else
                                            {
                                                <input type="checkbox" name="ColorsId" class="hidden" id="indigo@(color.ColorId)" value="@color.ColorId">
                                                <label data-theme="@color.ColorTitle" class="theme-button focus:outline-0 w-[20px] h-[20px] rounded-full bg-@color.ColorTitle-500" for="indigo@(color.ColorId)">
                                                </label>
                                            }

                                        }

                                    </div>
                                </details>
                            </div>

                        }

                        <div class="py-5">
                            <details class="group">
                                <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                                    <span> قیمت</span>
                                    <span class="transition group-open:rotate-180">
                                        <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24">
                                            <path d="M6 9l6 6 6-6"></path>
                                        </svg>
                                    </span>
                                </summary>
                                <!-- <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
                                  محدوده قیمت :
                                </p> -->
                                <div class="price-wrap">
                                    <span class="price-title">محدوده قیمت :</span>
                                    <div class="price-wrap-1">
                                        <input id="one">
                                        <label for="one">ریال</label>
                                    </div>
                                    <div class="price-wrap_line">-</div>
                                    <div class="price-wrap-2">
                                        <input id="two">
                                        <label for="two">ریال</label>
                                    </div>
                                </div>
                                <fieldset class="filter-price">
                                    <div class="price-field">
                                        <input type="range" min="@minPrice" max="@maxPrice" value="@minPrice" id="lower">
                                        <input type="range" min="@minPrice" max="@maxPrice" value="@maxPrice" id="upper">
                                    </div>
                                </fieldset>
                            </details>
                        </div>

                    </div>
                    <div class="w-full sticky bottom-1">
                        <div class="w-full py-4 bg-white text-[#252525] text-[12px] px-5 lg:hidden"
                             style="
                             box-shadow: 0 0 5px 1px #eee;
                                    font-family: yekanBakhtBold;
                                ">
                            مشاهده ۹۹.۳۳۳۱ کالا در عارف
                        </div>
                        <button class="w-full py-3 bg-[#252525] text-white my-3 sticky bottom-1">اعمال فیلتر</button>
                    </div>

                    @* <button class="w-full py-3 bg-[#252525] text-white my-3 sticky bottom-1">اعمال فیلتر</button>*@

                </div>

            </form>

        </div>

        <div class="mainContent w-full lg:w-[75%]">
            <div class="mx-auto flex items-center justify-between py-6 mt-5 border-b-[1px] border-[#D0D0D099]">
                <p class="text-[#7D7D7D] text-[14px] font-semibold hidden lg:inline-block">
                    نمایش <span class="text-[#252525]">@Model.AllEntitiesCount</span> محصول از
                    <span class="text-[#252525]">@Model.Entities.Count()</span>محصول فروشگاه عارف
                </p>

                <div class="showFilterMenu hover:cursor-pointer flex items-center justify-center gap-1 lg:hidden">
                    <img src="/ArefSet/src/assets/images/landing/filter.png" alt="">
                    <p class="text-[#7D7D7D] text-[14px] font-medium lg:hidden inline-block">
                        فیلتر ها
                    </p>
                </div>
                <div class="flex items-center justify-center gap-3">
                    <p class="text-[#7D7D7D] text-[14px] font-medium">مرتب سازی بر اساس :</p>
                    <select onchange='changeDropDown(this)' asp-items="Html.GetEnumSelectList(typeof(FilterStatus))"
                            class="py-2 px-5 block border bg-transparent rounded-md text-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400">

                        @if (Model.Status == FilterStatus.All)
                        {
                            <option value="0">همه</option>
                            <option value="1">تاریخ</option>
                            <option value="2">بیشترین قیمت</option>
                            <option value="3">کمترین قیمت</option>
                            <option value="4">تخفیف دارها</option>
                        }
                        @if (Model.Status == FilterStatus.CreateDate)
                        {
                            <option value="0">همه</option>
                            <option value="1" selected="selected">تاریخ</option>
                            <option value="2">بیشترین قیمت</option>
                            <option value="3">کمترین قیمت</option>
                            <option value="4">تخفیف دارها</option>
                        }
                        @if (Model.Status == FilterStatus.MaxPrice)
                        {
                            <option value="0">همه</option>
                            <option value="1">تاریخ</option>
                            <option value="2" selected="selected">بیشترین قیمت</option>
                            <option value="3">کمترین قیمت</option>
                            <option value="4">تخفیف دارها</option>
                        }
                        @if (Model.Status == FilterStatus.MinPrice)
                        {
                            <option value="0">همه</option>
                            <option value="1">تاریخ</option>
                            <option value="2">بیشترین قیمت</option>
                            <option value="3" selected="selected">کمترین قیمت</option>
                            <option value="4">تخفیف دارها</option>
                        }
                        @if (Model.Status == FilterStatus.Offer)
                        {
                            <option value="0">همه</option>
                            <option value="1">تاریخ</option>
                            <option value="2">بیشترین قیمت</option>
                            <option value="3">کمترین قیمت</option>
                            <option value="4" selected="selected">تخفیف دارها</option>
                        }

                    </select>
                </div>
            </div>

            @if (Model.Entities != null && Model.Entities.Any())
            {
                <div class="mx-auto bg-white min-h-sceen w-full">

                    <div class="grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-3 divide-y divide-neutral-200 text-right w-full mx-auto mt-5">

                        @foreach (var product in Model.Entities)
                        {
                            <div class="transition-all transform hover:shadow-lg flex flex-col justify-between items-center">
                                <div class="h-[157px] w-full lg:h-[413px] relative overflow-hidden productCardImg">
                                    <a asp-action="SinglePageProducts" asp-area="" asp-controller="Products" asp-route-id="@product.ProductID" asp-route-ProductTitle="@product.ProductTitle.FixTextForUrl()">
                                        <img class="w-full h-full object-cover" src="@PathTools.ProductPathThumb@product.ProductImageName" alt="">
                                    </a>

                                    <div class="transition-all flex flex-col items-end gap-2 absolute top-4 left-6 lg:top-6 lg:left-8 opacity-0 likeProduct">

                                        @if (favoriteProducts != null && favoriteProducts.Any() && favoriteProducts.Contains(product.ProductID))
                                        {
                                            <div class="transition-all w-[30px] h-[30px] lg:w-[48px] lg:h-[48px] flex items-center justify-center bg-[#252525] text-center text-[#fff]">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="currentColor" class="bi bi-heart-fill likeBtn text-red-500" viewBox="0 0 16 16">
                                                    <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z"></path>
                                                </svg>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="transition-all w-[30px] h-[30px] lg:w-[48px] lg:h-[48px] flex items-center justify-center bg-[#252525] text-center text-[#fff]">
                                                <img src="/ArefSet/src/assets/images/landing/heart.svg" alt="">
                                            </div>
                                        }

                                    </div>
                                </div>

                                <div class="p-2 lg:p-3 w-full lg:flex lg:justify-between lg:items-end">
                                    <div class="text-right">
                                        <p class="text-[#7E8285] text-[10px] lg:text-[12px] font-normal leading-[15.5px] lg:leading-[18.6px]">
                                            همه محصولات
                                        </p>
                                        <a style="overflow: hidden;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 2;" asp-action="SinglePageProducts" asp-area="" asp-controller="Products" asp-route-id="@product.ProductID" asp-route-ProductTitle="@product.ProductTitle.FixTextForUrl()" class="font-bold text-[12px]  lg:text-[16px] line-clamp-2 listShopCartTitle">
                                            @product.ProductTitle
                                        </a>
                                    </div>
                                    <div class="text-left">
                                        <p class="line-through inline-block text-[#B7B7B7] font-light text-[10px] lg:text-[14px]  h-4">
                                            @((product.OldPrice.HasValue) ? $"{product.OldPrice.Value.ToString("#,000")} ریال" : " ")
                                        </p>
                                        <p class="text-[#D92626] font-bold text-[15px] ">
                                            @product.Price.ToString("#,000") ریال
                                        </p>
                                    </div>
                                </div>
                            </div>

                        }

                    </div>
                </div>

                <partial name="_SitePaging" model="@Model.GetCurrentPaging()" />
            }
        </div>
    </section>
</main>