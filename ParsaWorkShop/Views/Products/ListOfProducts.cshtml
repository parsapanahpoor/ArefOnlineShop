@model Domain.ViewModels.SiteSide.Product.ListOfProductsViewModel
@using Application.Convertors;
@using Domain.ViewModels.SiteSide.Product
@using Application.StaticTools
@using Data.Context
@using Microsoft.EntityFrameworkCore;

@inject ParsaWorkShopContext _context;

@{
    ViewData["Title"] = "لیست محصولات";

    var categories = ViewData["Categories"] as List<ListOfCategoriesForShowInListOfProducts>;
    var colors = ViewData["Colors"] as List<ListOfColorsForShowInListOfProducts>;
    var sizes = ViewData["Sizes"] as List<ListOfSizesForShowInListOfProducts>;

    var minPrice = ViewData["MinPrice"] as int?;
    var maxPrice = ViewData["MaxPrice"] as int?;

    List<int> favoriteProducts = ViewData["FavoriteProducts"] as List<int>;
}

@section Styles
    {

    <!-- Main CSS File -->
    <link href="/ArefSet/dist/output.css" rel="stylesheet" />
    <link rel="stylesheet" href="/ArefSet/src/assets/styles/style.css" />
    <link rel="stylesheet" href="/ArefSet/src/assets/styles/productList.css" />

    <style>
        .filter-price {
            width: 300px;
            border: 0;
            padding: 0;
            margin: 15px auto 0 auto;
        }

        .price-title {
            position: relative;
            color: #252525;
            font-size: 14px;
            line-height: 1.2em;
            font-weight: 400;
        }

        .price-field {
            position: relative;
            width: 100%;
            height: 36px;
            box-sizing: border-box;
            background: rgba(248, 247, 244, 0.2);
            padding-top: 15px;
            padding-left: 16px;
            border-radius: 3px;
        }

            .price-field input[type="range"] {
                position: absolute;
            }

            /* Reset style for input range */

            .price-field input[type="range"] {
                width: 290px;
                height: 2px;
                border: 0;
                outline: 0;
                box-sizing: border-box;
                border-radius: 5px;
                pointer-events: none;
                -webkit-appearance: none;
            }

                .price-field input[type="range"]::-webkit-slider-thumb {
                    -webkit-appearance: none;
                }

                .price-field input[type="range"]:active,
                .price-field input[type="range"]:focus {
                    outline: 0;
                }

                .price-field input[type="range"]::-ms-track {
                    width: 290px;
                    height: 2px;
                    border: 0;
                    outline: 0;
                    box-sizing: border-box;
                    border-radius: 5px;
                    pointer-events: none;
                    background: transparent;
                    border-color: transparent;
                    color: transparent;
                    border-radius: 5px;
                }

                /* Style toddler input range */

                .price-field input[type="range"]::-webkit-slider-thumb {
                    /* WebKit/Blink */
                    position: relative;
                    -webkit-appearance: none;
                    margin: 0;
                    border: 0;
                    outline: 0;
                    border-radius: 50%;
                    height: 10px;
                    width: 10px;
                    margin-top: -4px;
                    background-color: #252525;
                    cursor: pointer;
                    cursor: pointer;
                    pointer-events: all;
                    z-index: 100;
                }

                .price-field input[type="range"]::-moz-range-thumb {
                    /* Firefox */
                    position: relative;
                    appearance: none;
                    margin: 0;
                    border: 0;
                    outline: 0;
                    border-radius: 50%;
                    height: 10px;
                    width: 10px;
                    margin-top: -5px;
                    background-color: #252525;
                    cursor: pointer;
                    cursor: pointer;
                    pointer-events: all;
                    z-index: 100;
                }

                .price-field input[type="range"]::-ms-thumb {
                    /* IE */
                    position: relative;
                    appearance: none;
                    margin: 0;
                    border: 0;
                    outline: 0;
                    border-radius: 50%;
                    height: 10px;
                    width: 10px;
                    margin-top: -5px;
                    background-color: #252525;
                    cursor: pointer;
                    cursor: pointer;
                    pointer-events: all;
                    z-index: 100;
                }

                /* Style track input range */

                .price-field input[type="range"]::-webkit-slider-runnable-track {
                    /* WebKit/Blink */
                    width: 290px;
                    height: 2px;
                    cursor: pointer;
                    background: #252525;
                    border-radius: 5px;
                }

                .price-field input[type="range"]::-moz-range-track {
                    /* Firefox */
                    width: 290px;
                    height: 2px;
                    cursor: pointer;
                    background: #252525;
                    border-radius: 5px;
                }

                .price-field input[type="range"]::-ms-track {
                    /* IE */
                    width: 290px;
                    height: 2px;
                    cursor: pointer;
                    background: #252525;
                    border-radius: 5px;
                }

        /* Style for input value block */

        .price-wrap {
            display: flex;
            justify-content: start;
            color: #252525;
            font-size: 14px;
            line-height: 1.2em;
            font-weight: 400;
            margin: 15px 0 7px 0;
        }

        .price-wrap-1,
        .price-wrap-2 {
            display: flex;
        }

        .price-title {
            /* margin-right: 5px; */
            backgrund: #d58e32;
        }

        .price-wrap_line {
            margin: 0 10px;
        }

        .price-wrap #one,
        .price-wrap #two {
            width: 60px;
            text-align: right;
            margin: 0;
            padding: 0;
            margin-right: 2px;
            background: 0;
            border: 0;
            outline: 0;
            color: #252525;
            font-family: "Karla", "Arial", sans-serif;
            font-size: 14px;
            line-height: 1.2em;
            font-weight: 400;
        }

        .price-wrap label {
            text-align: right;
        }

        /* Style for active state input */

        .price-field input[type="range"]:hover::-webkit-slider-thumb {
            box-shadow: 0 0 0 0.5px #252525;
            transition-duration: 0.3s;
        }

        .price-field input[type="range"]:active::-webkit-slider-thumb {
            box-shadow: 0 0 0 0.5px #252525;
            transition-duration: 0.3s;
        }
    </style>
}

@section Scripts
    {

    <script src="/ArefSet/src/JS/landing.js"></script>

    <script>
        var colorButton = document.getElementsByClassName("theme-button");
        var i;
        for (i = 0; i < colorButton.length; i++) {
            colorButton[i].addEventListener("click", function () {
                this.classList.toggle("active");
            });
        }

        //  price filter

        var lowerSlider = document.querySelector("#lower");
        var upperSlider = document.querySelector("#upper");

        document.querySelector("#two").value = upperSlider.value;
        document.querySelector("#one").value = lowerSlider.value;

        var lowerVal = parseInt(lowerSlider.value);
        var upperVal = parseInt(upperSlider.value);

        upperSlider.oninput = function () {
            lowerVal = parseInt(lowerSlider.value);
            upperVal = parseInt(upperSlider.value);

            if (upperVal < lowerVal + 4) {
                lowerSlider.value = upperVal - 4;
                if (lowerVal == lowerSlider.min) {
                    upperSlider.value = 4;
                }
            }
            document.querySelector("#two").value = this.value;
        };

        lowerSlider.oninput = function () {
            lowerVal = parseInt(lowerSlider.value);
            upperVal = parseInt(upperSlider.value);
            if (lowerVal > upperVal - 4) {
                upperSlider.value = lowerVal + 4;
                if (upperVal == upperSlider.max) {
                    lowerSlider.value = parseInt(upperSlider.max) - 4;
                }
            }
            document.querySelector("#one").value = this.value;
        };
    </script>
    <script>
        //const modal = document.querySelector(".modal");
        //const showModal = document.querySelector(".showModal");
        //const hideModal = document.querySelectorAll(".hideModal");

        //const menu = document.querySelector(".menu");
        //const showMenu = document.querySelector(".showMenu");
        //const hideMenu = document.querySelectorAll(".hideMenu");

        const filterMenu = document.querySelector(".filterMenu");
        const mainContent = document.querySelector(".mainContent");
        const showFilterMenu = document.querySelector(".showFilterMenu");
        const hideFilterMenu = document.querySelector(".hideFilterMenu");
        const footer = document.querySelector(".footer");
        const navbar = document.querySelector(".navbar");
        const breadcrumb = document.querySelector(".breadcrumb");

        //const body = document.querySelector("body");

        // ------------------------ modal -------------------------------

        //showModal.addEventListener("click", function () {
        //    modal.classList.remove("hidden");
        //    body.style.overflow = "hidden";
        //});

        //hideModal.forEach((close) => {
        //    close.addEventListener("click", function () {
        //        modal.classList.add("hidden");
        //        body.style.overflow = "auto";
        //    });
        //});

        // ------------------------Side Menu Responsive-------------------------------

        //showMenu.addEventListener("click", function () {
        //    // menu.classList.replace("-right-[70%]","right-0")
        //    menu.classList.remove("opacity-0");
        //    menu.classList.remove("invisible");
        //    body.style.overflow = "hidden";
        //});
        //hideMenu.forEach((close) => {
        //    close.addEventListener("click", function () {
        //        // menu.classList.replace("right-0","-right-[70%]")
        //        menu.classList.add("opacity-0");
        //        menu.classList.add("invisible");
        //        body.style.overflow = "auto";
        //    });
        //});

        //function openForm(evt, formName) {
        //    var i, tabFormContent, tabFormLinks;
        //    tabFormContent = document.getElementsByClassName("tabFormContent");
        //    for (i = 0; i < tabFormContent.length; i++) {
        //        tabFormContent[i].style.display = "none";
        //    }
        //    tabFormLinks = document.getElementsByClassName("tabFormLinks");
        //    for (i = 0; i < tabFormLinks.length; i++) {
        //        tabFormLinks[i].className = tabFormLinks[i].className.replace(
        //            " activeFormItem",
        //            ""
        //        );
        //    }
        //    document.getElementById(formName).style.display = "block";
        //    evt.currentTarget.className += " activeFormItem";
        //}

        //// Get the element with id="defaultOpen" and click on it
        //document.getElementById("defaultFormOpen").click();

        // ------------------------Filter Side Menu Responsive-------------------------------

        showFilterMenu.addEventListener("click", function () {
            // menu.classList.replace("-right-[70%]","right-0")
            // menu.classList.remove("opacity-0");
            // menu.classList.remove("invisible");

            mainContent.classList.add("hidden");
            filterMenu.classList.remove("hidden");
            footer.classList.add("hidden");
            navbar.classList.add("hidden");
            breadcrumb.classList.add("hidden");

            // showFilterMenu
            // hideFilterMenu

            // body.style.overflow = "hidden";
            console.log("showFilterMenu")
        });

        // function hideFilterMenu() {
        //   alert("hided")
        // }

        hideFilterMenu.addEventListener("click", function () {

            console.log("hello");

            filterMenu.classList.add("hidden");
            // alert("hided")
            mainContent.classList.remove("hidden");
            footer.classList.remove("hidden");
            navbar.classList.remove("hidden");
            breadcrumb.classList.remove("hidden");
            // menu.classList.replace("right-0","-right-[70%]")
            // menu.classList.add("opacity-0");
            // menu.classList.add("invisible");
            // body.style.overflow = "auto";
        });

        // -----------------------------Like btn------------------------------

        var likeBtn = document.getElementsByClassName("likeBtn");
        var i;
        for (i = 0; i < likeBtn.length; i++) {
            likeBtn[i].addEventListener("click", function () {
                this.classList.toggle("text-red-500");
            });
        }

        //function myFunction(e) {
        //    document.getElementById("Status").value = e.target.value;
        //    $("#filtre").submit();
        //}

        //$("#StatusOption").on('change', function () {

        //    console.log(this.value);

        //    document.getElementById("Status").value = this.value;
        //    $("#filtre").submit();
        //});



    </script>

    <script type="text/javascript">
        function changeDropDown(dropdown) {
            var location = dropdown.options[dropdown.selectedIndex].value;

            document.getElementById("Status").value = location;
            $("#filtre").submit();
        }

        function FillPageId(id) {
            $("#Page").val(id);
            $("#filtre").submit();
        }
    </script>
}



<main class="mx-auto" style="margin-bottom:100px">
    <section class="breadcrumb mx-auto lg:mt-5 mt-5 px-5 lg:px-0 max-w-[99%] lg:max-w-[86.5em]">
        <nav class="flex" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-3">
                <li class="inline-flex items-center">
                    <a href="/" class="inline-flex items-center text-[13px] lg:text-sm font-medium text-[#A8A8A8] hover:text-[#252525] dark:text-gray-400 dark:hover:text-white">
                        @*<svg aria-hidden="true" class="w-4 h-4 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
                        </svg>*@
                        <svg width="20" class="w-4 h-4 ml-2 text-[#A8A8A8] hover:text-[#252525]" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M10 15V12.5" stroke="#A8A8A8" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                            <path d="M8.39172 2.35004L2.61672 6.97504C1.96672 7.4917 1.55006 8.58337 1.69172 9.40004L2.80006 16.0334C3.00006 17.2167 4.13339 18.175 5.33339 18.175H14.6667C15.8584 18.175 17.0001 17.2084 17.2001 16.0334L18.3084 9.40004C18.4417 8.58337 18.0251 7.4917 17.3834 6.97504L11.6084 2.35837C10.7167 1.6417 9.27506 1.6417 8.39172 2.35004Z" stroke="#A8A8A8" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                        </svg>
                        خانه
                    </a>
                </li>

                <li aria-current="page">
                    <div class="flex items-center">
                        <svg aria-hidden="true" class="w-6 h-6 text-gray-400 transform rotate-180" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                        </svg>
                        <span class="mr-1 text-sm font-medium text-[#252525] md:mr-2 dark:text-gray-400">لیست نحصولات</span>
                    </div>
                </li>
            </ol>
        </nav>
    </section>
    <section class="mx-auto px-5 lg:px-0 max-w-[99%] lg:max-w-[86.5em] flex items-start justify-center gap-8">
        <div class="filterMenu lg:inline-block w-full lg:w-[25%] hidden">
            <div class="mx-auto flex items-center justify-between py-8 mt-5 border-b-[1px] border-[#D0D0D099]">
                <p class="text-[#252525] text-[16px] font-semibold">فیلترها :</p>
                <div class="flex items-center gap-2">
                    @*<img src="/ArefSet/src/assets/images/landing/RemoveIcon.png" alt="">*@
                    <div class="flex items-center hover:cursor-pointer ">

                        <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M8.48523 14.1421L14.1421 8.48524" stroke="#C5272D" stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M14.1421 14.1422L8.48523 8.48535" stroke="#C5272D" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <a asp-action="ListOfProducts" asp-area="" asp-controller="products" class="text-[#7E8285] lg:text-[#C5272D] text-[12px] font-normal">
                            پاک کردن همه
                        </a>
                    </div>
                    <a href="#" onclick="hideFilterMenu()" class="hideFilterMenu mr-3 inline-flex items-center justify-center w-[48px] h-[48px] rounded-full bg-[#EDEDED] lg:hidden">
                        @*<img class="w-3 h-3" src="/ArefSet/src/assets/images/landing/RemoveIcon.png" alt="">*@
                        <svg width="40" height="40" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M12.728 21.2427L21.2133 12.7574" stroke="#252525" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M21.2133 21.2426L12.728 12.7573" stroke="#252525" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                    </a>
                </div>
            </div>
            <form asp-action="ListOfProducts" asp-controller="Products" class=" w-full" asp-area="" id="filtre" method="get">
                <input type="hidden" asp-for="Page" />
                <input type="hidden" asp-for="Status" />
                <input type="hidden" asp-for="ProductTitle" />

                <div class="mx-auto bg-white min-h-sceen w-full relative">
                    <!-- <div class="flex flex-col items-center  w-full">
                      <h2 class="font-bold text-5xl mt-5 tracking-tight">FAQ</h2>
                      <p class="text-neutral-500 text-xl mt-3">
                        Frequenty asked questions
                      </p>
                    </div> -->
                    <div class="grid divide-y divide-neutral-200 text-right w-full mx-auto mt-5  w-full">

                        @if (categories != null && categories.Any())
                        {
                            <div class="py-5 w-full">
                                <details class="group">
                                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                                        <span> دسته بندی</span>
                                        <span class="transition group-open:rotate-180">
                                            <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24">
                                                <path d="M6 9l6 6 6-6"></path>
                                            </svg>
                                        </span>
                                    </summary>

                                    @foreach (var category in categories)
                                    {
                                        <div class="flex items-center justify-start mb-2">
                                            <div class="flex items-center mt-4">

                                                @if (Model.CategoriesId != null && Model.CategoriesId.Any() && Model.CategoriesId.Contains(category.CategoryId))
                                                {
                                                    <input id="@category.CategoryId" type="checkbox" checked="checked" name="CategoriesId" value="@category.CategoryId" class="w-4 h-4 accent-[#252525] text-[#252525] bg-gray-100 border-gray-300 rounded focus:ring-[#252525] dark:focus:ring-[#252525] dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                                }
                                                else
                                                {
                                                    <input id="@category.CategoryId" type="checkbox" name="CategoriesId" value="@category.CategoryId" class="w-4 h-4 accent-[#252525] text-[#252525] bg-gray-100 border-gray-300 rounded focus:ring-[#252525] dark:focus:ring-[#252525] dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                                }

                                                <label for="@category.CategoryId" class="ml-2 text-sm font-medium text-[#9B9B9B] dark:text-gray-300 mr-2 text-[20px]">
                                                    @category.CategoryTitle
                                                </label>

                                            </div>
                                        </div>
                                    }

                                </details>
                            </div>

                        }

                        @if (sizes != null && sizes.Any())
                        {
                            <div class="py-5">
                                <details class="group">
                                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                                        <span> سایز</span>
                                        <span class="transition group-open:rotate-180">
                                            <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24">
                                                <path d="M6 9l6 6 6-6"></path>
                                            </svg>
                                        </span>
                                    </summary>

                                    @foreach (var size in sizes)
                                    {
                                        <div class="flex items-center justify-start mb-2">
                                            <div class="flex items-center mt-4">

                                                @if (Model.SizesId != null && Model.SizesId.Any() && Model.SizesId.Contains(size.SizesId))
                                                {
                                                    <input id="@size.SizesId" type="checkbox" checked="checked" name="SizesId" value="@size.SizesId" class="w-4 h-4 accent-[#252525] text-[#252525] bg-gray-100 border-gray-300 rounded focus:ring-[#252525] dark:focus:ring-[#252525] dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                                }
                                                else
                                                {
                                                    <input id="@size.SizesId" type="checkbox" name="SizesId" value="@size.SizesId" class="w-4 h-4 accent-[#252525] text-[#252525] bg-gray-100 border-gray-300 rounded focus:ring-[#252525] dark:focus:ring-[#252525] dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                                }

                                                <label for="@size.SizesId" class="ml-2 text-sm font-medium text-[#9B9B9B] dark:text-gray-300 mr-2 text-[20px]">
                                                    @size.SizesTitle
                                                </label>

                                            </div>
                                        </div>
                                    }

                                </details>
                            </div>

                        }

                        @if (colors != null && colors.Any())
                        {
                            <div class="py-5">
                                <details class="group">
                                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                                        <span> رنگ</span>
                                        <span class="transition group-open:rotate-180">
                                            <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24">
                                                <path d="M6 9l6 6 6-6"></path>
                                            </svg>
                                        </span>
                                    </summary>
                                    <div class="flex items-center justify-center gap-2"></div>
                                    <div class="switcher flex items-center justify-start flex-wrap gap-2  mt-4">

                                        @foreach (var color in colors)
                                        {

                                            if (Model.ColorsId != null && Model.ColorsId.Any() && Model.ColorsId.Contains(color.ColorId))
                                            {
                                                <input type="checkbox" name="ColorsId" class="hidden" id="indigo@(color.ColorId)" value="@color.ColorId">
                                                <label style="background-color:@color.ColorTitle-500" data-theme="@color.ColorTitle" class="theme-button focus:outline-0 w-[20px] h-[20px] rounded-1

                                                   @((Model.ColorsId != null && Model.ColorsId.Any() && Model.ColorsId.Contains(color.ColorId)) ? "active" : " " )" for="indigo@(color.ColorId)">
                                                </label>
                                            }
                                            else
                                            {
                                                <input type="checkbox" name="ColorsId" class="hidden" id="indigo@(color.ColorId)" value="@color.ColorId">
                                                <label style="background-color:@color.ColorTitle-500" data-theme="@color.ColorTitle" class="theme-button focus:outline-0 w-[20px] h-[20px] rounded-1 " for="indigo@(color.ColorId)">
                                                </label>
                                            }

                                        }

                                    </div>
                                </details>
                            </div>

                        }

                        <div class="py-5  w-full">
                            <details class="group  w-full">
                                <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                                    <span> قیمت</span>
                                    <span class="transition group-open:rotate-180">
                                        <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24">
                                            <path d="M6 9l6 6 6-6"></path>
                                        </svg>
                                    </span>
                                </summary>
                                <!-- <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
                                  محدوده قیمت :
                                </p> -->
                                <div class="price-wrap">
                                    <span class="price-title">محدوده قیمت :</span>
                                    <div class="price-wrap-1">
                                        <input class="inline-block !w-[50px]" id="one">
                                        <label for="one">ریال</label>
                                    </div>
                                    <div class="price-wrap_line">-</div>
                                    <div class="price-wrap-2">
                                        <input class="inline-block !w-[50px]" id="two">
                                        <label for="two">ریال</label>
                                    </div>
                                </div>
                                <fieldset class="filter-price w-full mx-auto ">
                                    <div class="price-field w-full  mx-auto">
                                        <input type="range" min="@minPrice" max="@maxPrice" value="@minPrice" id="lower">
                                        <input type="range" min="@minPrice" max="@maxPrice" value="@maxPrice" id="upper">
                                    </div>
                                </fieldset>

                            </details>
                        </div>

                    </div>
                    <div class="w-full sticky bottom-1">
                        <div class="w-full py-4 bg-white text-[#252525] text-[12px] px-5 lg:hidden"
                             style="
                             box-shadow: 0 0 5px 1px #eee;
                                    font-family: yekanBakhtBold;
                                ">
                            مشاهده ۹۹.۳۳۳۱ کالا در عارف
                        </div>
                        <button class="w-full py-3 bg-[#252525] text-white my-3 sticky bottom-1">اعمال فیلتر</button>
                    </div>

                    @* <button class="w-full py-3 bg-[#252525] text-white my-3 sticky bottom-1">اعمال فیلتر</button>*@

                </div>

            </form>

        </div>

        <div class="mainContent w-full lg:w-[75%]">
            <div class="border-b-[1px] pb-1 border-[#D0D0D099]">

                <div class="mx-auto flex items-center justify-between pt-6 mt-5 ">
                    <p class="text-[#7D7D7D] text-[14px] font-semibold hidden lg:inline-block">
                        نمایش <span class="text-[#252525] px-1">@Model.Entities.Count()</span>محصول از
                        <span class="text-[#252525] px-1">@Model.AllEntitiesCount</span>محصول فروشگاه عارف
                    </p>

                    <div class="showFilterMenu hover:cursor-pointer flex items-center justify-center gap-1 lg:hidden">
                        @*<img src="/ArefSet/src/assets/images/landing/filter.png" alt="">*@
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M3.59993 1.40002H12.3999C13.1333 1.40002 13.7333 2.00002 13.7333 2.73336V4.20002C13.7333 4.73336 13.3999 5.40002 13.0666 5.73336L10.1999 8.26669C9.79993 8.60002 9.53327 9.26669 9.53327 9.80002V12.6667C9.53327 13.0667 9.2666 13.6 8.93327 13.8L7.99994 14.4C7.13327 14.9334 5.93327 14.3334 5.93327 13.2667V9.73336C5.93327 9.26669 5.6666 8.66669 5.39994 8.33336L2.8666 5.66669C2.53327 5.33336 2.2666 4.73336 2.2666 4.33336V2.80002C2.2666 2.00002 2.8666 1.40002 3.59993 1.40002Z" stroke="#292D32" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <p class="text-[#7D7D7D] text-[12px] lg:text-[14px] font-medium lg:hidden inline-block">
                            فیلتر ها
                        </p>
                    </div>
                    <div class="flex items-center justify-center gap-3">
                        <p class="text-[#7D7D7D] text-[12px]  lg:text-[14px] font-medium">مرتب سازی بر اساس :</p>
                        <div class=" border px-2">

                            <select onchange='changeDropDown(this)'
                            @*class="py-3 px-4 pl-9 block w-full border-gray-200 rounded-md text-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400"*@
                                    class="py-2  lg:px-5 block  bg-transparent  text-sm   dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400">

                                @if (Model.Status == FilterStatus.All)
                                {
                                    <option value="0">همه</option>
                                    <option value="1">تاریخ</option>
                                    <option value="2">بیشترین قیمت</option>
                                    <option value="3">کمترین قیمت</option>
                                    <option value="4">تخفیف دارها</option>
                                }
                                @if (Model.Status == FilterStatus.CreateDate)
                                {
                                    <option value="0">همه</option>
                                    <option value="1" selected="selected">تاریخ</option>
                                    <option value="2">بیشترین قیمت</option>
                                    <option value="3">کمترین قیمت</option>
                                    <option value="4">تخفیف دارها</option>
                                }
                                @if (Model.Status == FilterStatus.MaxPrice)
                                {
                                    <option value="0">همه</option>
                                    <option value="1">تاریخ</option>
                                    <option value="2" selected="selected">بیشترین قیمت</option>
                                    <option value="3">کمترین قیمت</option>
                                    <option value="4">تخفیف دارها</option>
                                }
                                @if (Model.Status == FilterStatus.MinPrice)
                                {
                                    <option value="0">همه</option>
                                    <option value="1">تاریخ</option>
                                    <option value="2">بیشترین قیمت</option>
                                    <option value="3" selected="selected">کمترین قیمت</option>
                                    <option value="4">تخفیف دارها</option>
                                }
                                @if (Model.Status == FilterStatus.Offer)
                                {
                                    <option value="0">همه</option>
                                    <option value="1">تاریخ</option>
                                    <option value="2">بیشترین قیمت</option>
                                    <option value="3">کمترین قیمت</option>
                                    <option value="4" selected="selected">تخفیف دارها</option>
                                }

                            </select>
                        </div>
                    </div>
                </div>

                <div class=" pb-6 my-1">
                    <ul class="flex items-center justify-start flex-wrap gap-3 mt-2 lg:mt-0">
                        <li class="flex items-center justify-start">
                            <button>

                                <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.48523 14.1421L14.1421 8.48524" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                    <path d="M14.1421 14.1422L8.48523 8.48535" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                </svg>
                            </button>
                            <h6 class="text-[12px] lg:text-[14px] text-[#252525] ps-1">مردانه </h6>
                        </li>

                        <li class="flex items-center justify-start ">
                            <button>

                                <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.48523 14.1421L14.1421 8.48524" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                    <path d="M14.1421 14.1422L8.48523 8.48535" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                </svg>
                            </button>
                            <h6 class="text-[12px] lg:text-[14px] text-[#252525] ps-1"> زنانه </h6>
                        </li>

                        <li class="flex items-center justify-start ">
                            <button>

                                <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.48523 14.1421L14.1421 8.48524" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                    <path d="M14.1421 14.1422L8.48523 8.48535" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                </svg>
                            </button>
                            <h6 class="text-[12px] lg:text-[14px] text-[#252525] ps-1">xlarg  </h6>
                        </li>

                        <li class="flex items-center justify-start ">
                            <button>

                                <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.48523 14.1421L14.1421 8.48524" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                    <path d="M14.1421 14.1422L8.48523 8.48535" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                </svg>
                            </button>
                            <h6 class="text-[12px] lg:text-[14px] text-[#252525] ps-1"> XXL  </h6>
                        </li>

                        <li class="flex items-center justify-start ">
                            <button>

                                <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.48523 14.1421L14.1421 8.48524" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                    <path d="M14.1421 14.1422L8.48523 8.48535" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                </svg>
                            </button>
                            <h6 class="text-[12px] lg:text-[14px] text-[#252525] ps-1"> medium</h6>
                        </li>

                        <li class="flex items-center justify-start ">
                            <button>

                                <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.48523 14.1421L14.1421 8.48524" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                    <path d="M14.1421 14.1422L8.48523 8.48535" stroke="#7D7D7D" stroke-linecap="round" stroke-linejoin="round"></path>
                                </svg>
                            </button>
                            <h6 class="text-[12px] lg:text-[14px] text-[#252525] ps-1"> کالکشن  </h6>
                        </li>
                    </ul>
                </div>
            </div>

            @if (Model.Entities != null && Model.Entities.Any())
            {
                <div class="mx-auto bg-white min-h-sceen w-full">

                    <div class="grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-2 lg:gap-4 text-right w-full mx-auto mt-5">

                        @foreach (var product in Model.Entities)
                        {
                            <div class="transition-all transform hover:shadow-lg flex flex-col justify-between items-center shopCardHover">
                                <div class="h-[157px] w-full lg:h-[413px] relative overflow-hidden productCardImg">
                                    @* <a asp-action="SinglePageProducts" asp-area="" asp-controller="Products" asp-route-id="@product.ProductID" asp-route-ProductTitle="@product.ProductTitle.FixTextForUrl()">
                            <img class="w-full h-full object-cover" src="@PathTools.ProductPathThumb@product.ProductImageName" alt="">
                            </a>*@
                                    <a asp-action="SinglePageProducts" asp-area="" asp-controller="Products" asp-route-id="@product.ProductID" asp-route-ProductTitle="@product.ProductTitle.FixTextForUrl()" class="transition-all block w-full h-full overflow-hidden relative">
                                        <img class="product-image  w-full h-full object-cover " src="@PathTools.ProductPath@product.ProductImageName" title="@product.ProductTitle" alt="@product.ProductTitle" />
                                        @*<img class="product-image  w-full  " src="/ArefSet/src/assets/images/landing/20.jpg" alt="" />*@
                                        @{

                                            var secondeImage = await _context.ProductGallery
                                            .AsNoTracking()
                                            .Where(p => p.ProductID == product.ProductID)
                                            .Select(p => p.ImageName)
                                            .FirstOrDefaultAsync();
                                        }
                                        @if (!string.IsNullOrEmpty(secondeImage))
                                        {
                                            <img class="product-image-hover w-full h-full object-cover  absolute top-0 right-0 left-0 bottom-0" src="@PathTools.ProductGalleryPath/@secondeImage" title="@product.ProductTitle" alt="@product.ProductTitle" />

                                        }
                                    </a>
                                    <div class="transition-all opacity-0 absolute -bottom-10 left-0 right-0 w-full bg-[#252525] text-center py-1 lg:py-2 text-[#fff] addToCart text-[12px] lg:text-[16px]">

                                        <a asp-action="SinglePageProducts" asp-area="" asp-controller="Products" asp-route-id="@product.ProductID" asp-route-ProductTitle="@product.ProductTitle.FixTextForUrl()" class="focus:outline-none bg-transparent w-full h-full">
                                            نمایش جزئیات
                                        </a>
                                    </div>
                                    <div class="transition-all flex flex-col items-end gap-2 absolute top-4 left-6 lg:top-6 lg:left-8 opacity-0 likeProduct">

                                        @if (favoriteProducts != null && favoriteProducts.Any() && favoriteProducts.Contains(product.ProductID))
                                        {
                                                <div class="transition-all w-[30px] h-[30px] lg:w-[48px] lg:h-[48px] flex items-center justify-center bg-[#252525] text-center text-[#fff]">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="currentColor" class="bi bi-heart-fill likeBtn text-red-500" viewBox="0 0 16 16">
                                                        <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z"></path>
                                                    </svg>
                                                </div>
                                        }
                                        else
                                        {
                                                <div class="transition-all w-[30px] h-[30px] lg:w-[48px] lg:h-[48px] flex items-center justify-center bg-[#252525] text-center text-[#fff]">
                                                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                        <path d="M10.5166 17.3416C10.2333 17.4416 9.76662 17.4416 9.48329 17.3416C7.06663 16.5166 1.66663 13.0749 1.66663 7.24158C1.66663 4.66658 3.74163 2.58325 6.29996 2.58325C7.81662 2.58325 9.15829 3.31659 9.99996 4.44992C10.8416 3.31659 12.1916 2.58325 13.7 2.58325C16.2583 2.58325 18.3333 4.66658 18.3333 7.24158C18.3333 13.0749 12.9333 16.5166 10.5166 17.3416Z" stroke="#7E8285" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                                    </svg>
                                                </div>
                                        }

                                    </div>
                                </div>

                                <div class="p-2 lg:p-3 w-full lg:flex lg:justify-between lg:items-end">
                                    <div class="text-right">
                                        <p class="text-[#7E8285] text-[10px] lg:text-[12px] font-normal leading-[15.5px] lg:leading-[18.6px]">
                                            همه محصولات
                                        </p>
                                        <a style="font-family:yekanBakhtBold; overflow: hidden;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 2;" asp-action="SinglePageProducts" asp-area="" asp-controller="Products" asp-route-id="@product.ProductID" asp-route-ProductTitle="@product.ProductTitle.FixTextForUrl()" class="text-[#252525]  text-[12px]  lg:text-[16px] line-clamp-2 listShopCartTitle">
                                            @product.ProductTitle
                                        </a>
                                    </div>
                                    <div class="text-left">
                                        <p class="line-through inline-block text-[#B7B7B7] font-light text-[10px] lg:text-[14px]  h-4">
                                            @((product.OldPrice.HasValue) ? $"{product.OldPrice.Value.ToString("#,000")} ریال" : " ")
                                        </p>
                                        <p class="text-[#D92626] font-bold text-[15px] ">
                                            @product.Price.ToString("#,000") ریال
                                        </p>
                                    </div>
                                </div>
                            </div>

                            @*<div class="transition-all duration-300 transform ease-linear transform hover:shadow-lg flex flex-col justify-between items-center shopCardHover">
                    <div class="h-[157px] w-full lg:h-[413px] relative overflow-hidden productCardImg  transition-all duration-300 transform ease-linear">

                    <a asp-action="SinglePageProducts" asp-area="" asp-controller="Products" asp-route-id="@item.ProductId" asp-route-ProductTitle="@item.Title.FixTextForUrl()" class="transition-all block w-full h-full overflow-hidden relative">
                    <img class="product-image  w-full h-full object-cover absolute top-0 right-0 left-0 bottom-0" src="@PathTools.ProductPathThumb@item.ProductImageName" title="@item.Title" alt="@item.Title" />
                    <img class="product-image-hover w-full h-full object-cover  absolute top-0 right-0 left-0 bottom-0" src="/ArefSet/src/assets/images/landing/Rectangle 5.png" title="@item.Title" alt="@item.Title" />
                    </a>

                    </div>
                    <div class="p-2 lg:p-3 w-full lg:flex lg:justify-between lg:items-end">
                    <div class="text-right inline-block lg:w-[283px]">
                    <p class="text-[#7E8285] text-[10px] lg:text-[12px] font-normal leading-[15.5px] lg:leading-[18.6px]">
                    @category.ProdudctCategoryTitle
                    </p>
                    <a asp-action="SinglePageProducts" asp-area="" asp-controller="Products" asp-route-id="@item.ProductId" asp-route-ProductTitle="@item.Title.FixTextForUrl()" class="font-bold text-[12px] lg:text-[18px] shopCardTitle">
                    @item.Title
                    </a>
                    </div>
                    <div class="text-left">
                    <p class="line-through text-[#B7B7B7] font-light text-[10px] lg:text-[14px] inline-block h-4">
                    @((item.OldPrice.HasValue) ? $"{item.OldPrice.Value.ToString("#,000")} ریال" : " ")

                    </p>
                    <p class="text-[#D92626] font-bold text-[15px] lg:text-[17px]">
                    @item.Price.ToString("#,000") ریال
                    </p>
                    </div>
                    </div>
                    </div>*@
                        }

                    </div>
                </div>

                <partial name="_SitePaging" model="@Model.GetCurrentPaging()" />
            }
        </div>
    </section>
</main>